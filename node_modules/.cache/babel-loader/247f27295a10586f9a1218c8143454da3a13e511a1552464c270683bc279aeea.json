{"ast":null,"code":"var _jsxFileName = \"/Users/danielheibach/Daniel/React/Tictactoe/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square(props) {\n  var _s = $RefreshSig$();\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    /*style ={{backgroundColor: \"red\"}}*/id: props.id,\n    className: \"square\",\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 7\n  }, this);\n  function HoverableComponent() {\n    _s();\n    const [showMessage, setShowMessage] = useState(false);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hoverableDiv\",\n        onMouseEnter: () => {\n          setShowMessage(true);\n        },\n        onMouseLeave: () => {\n          setShowMessage(false);\n        },\n        children: \"Hover me!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), showMessage && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hello, World!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true);\n  }\n  _s(HoverableComponent, \"9VTGHbNDVee36OgIegpbFCPzSY4=\");\n  class Board extends React.Component {\n    renderSquare(i) {\n      return /*#__PURE__*/_jsxDEV(Square, {\n        value: this.props.squares[i],\n        onClick: () => this.props.onClick(i),\n        id: \"square_\" + i\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this);\n    }\n\n    /*  render() {\n        return (\n          <>\n          <div>\n            <div className=\"board-row\">\n              {this.renderSquare(0)}\n              {this.renderSquare(1)}\n              {this.renderSquare(2)}\n            </div>\n            <div className=\"board-row\">\n              {this.renderSquare(3)}\n              {this.renderSquare(4)}\n              {this.renderSquare(5)}\n            </div>\n            <div className=\"board-row\">\n              {this.renderSquare(6)}\n              {this.renderSquare(7)}\n              {this.renderSquare(8)}\n            </div>\n          </div>\n          </>\n        );\n      }\n    */\n    render() {\n      let boardSquares = [];\n      for (let row = 0; row < 3; row++) {\n        let boardRow = [];\n        for (let col = 0; col < 3; col++) {\n          boardRow.push( /*#__PURE__*/_jsxDEV(\"span\", {\n            children: this.renderSquare(row * 3 + col)\n          }, row * 3 + col, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this));\n        }\n        boardSquares.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-row\",\n          children: boardRow\n        }, row, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 31\n        }, this));\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: boardSquares\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this);\n    }\n  }\n  class Game extends React.Component {\n    constructor(props) {\n      super(props);\n      this.winner_line = null;\n      this.isDraw = false;\n      this.state = {\n        history: [{\n          squares: Array(9).fill(null),\n          lastMove: null\n        }],\n        update: false,\n        stepNumber: 0,\n        xIsNext: true,\n        isReverse: false\n      };\n    }\n    handleClick(i) {\n      console.log(\"was pressed\");\n      const history = this.state.history.slice(0, this.state.stepNumber + 1);\n      const current = history[history.length - 1];\n      const squares = current.squares.slice();\n      const lastMove = [i % 3, Math.floor(i / 3)];\n      if (calculateWinner(squares) || squares[i] || this.isDraw) {\n        return;\n      }\n      console.log(history.length);\n      if (history.length >= 9 && current !== 9) this.isDraw = true;\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\n      this.setState({\n        history: history.concat([{\n          squares: squares,\n          lastMove: lastMove\n        }]),\n        stepNumber: history.length,\n        xIsNext: !this.state.xIsNext\n      });\n    }\n    jumpTo(step) {\n      if (step !== 9) this.isDraw = false;else if (this.winner_line === null) this.isDraw = true;\n      this.setState({\n        stepNumber: step,\n        xIsNext: step % 2 === 0\n      });\n    }\n    render() {\n      let history = this.state.history;\n      const current = history[this.state.stepNumber];\n      const winner = calculateWinner(current.squares);\n      let moves = history.map((step, move) => {\n        const desc = move ? 'Go to move #' + move + ' at position (' + history[move].lastMove.toString() + ')' : 'Go to game start';\n        if (this.state.stepNumber === move) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bold\",\n              onClick: () => this.jumpTo(move),\n              children: desc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 13\n            }, this)\n          }, move, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 11\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"status\",\n              onClick: () => this.jumpTo(move),\n              children: desc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)\n          }, move, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this);\n        }\n      });\n      let status;\n      if (winner) {\n        status = 'Winner: ' + winner[0];\n        const indices = winner[1];\n        const elements = [];\n        elements.push(document.getElementById(\"square_\" + indices[0]));\n        elements.push(document.getElementById(\"square_\" + indices[1]));\n        elements.push(document.getElementById(\"square_\" + indices[2]));\n        for (const element of elements) {\n          element.classList.add(\"winner\");\n        }\n        this.winner_line = winner[1];\n      } else if (this.isDraw) {\n        status = \"This is a draw\";\n      } else {\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        if (this.winner_line !== null) {\n          const elements = [];\n          elements.push(document.getElementById(\"square_\" + this.winner_line[0]));\n          elements.push(document.getElementById(\"square_\" + this.winner_line[1]));\n          elements.push(document.getElementById(\"square_\" + this.winner_line[2]));\n          for (const element of elements) {\n            element.classList.remove(\"winner\");\n          }\n          this.winner_line = null;\n        }\n        const winnerElements = document.getElementsByClassName(\"winner\") ? document.getElementsByClassName(\"winner\") : null;\n        if (winnerElements !== null) {\n          for (const element in winnerElements) {\n            var _element$classList;\n            (_element$classList = element.classList) === null || _element$classList === void 0 ? void 0 : _element$classList.remove(\"winner\");\n          }\n        }\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-board\",\n          children: /*#__PURE__*/_jsxDEV(Board, {\n            squares: current.squares,\n            onClick: i => this.handleClick(i)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n            children: this.state.isReverse ? moves.reverse() : moves\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"sortButton\",\n          style: {\n            height: 22,\n            fontWeight: 'bold'\n          },\n          hidden: !(moves.length > 1),\n          onClick: () => {\n            this.setState({\n              isReverse: !this.state.isReverse\n            });\n          },\n          children: \"\\u21C5 sort me \\u21C5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this);\n    }\n  }\n  // ========================================\n\n  const root = ReactDOM.createRoot(document.getElementById(\"root\"));\n  root.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 15\n  }, this));\n  function calculateWinner(squares) {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return [squares[a], lines[i]];\n      }\n    }\n    return null;\n  }\n}\n_c = Square;\nvar _c;\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"names":["React","ReactDOM","Square","props","id","onClick","value","HoverableComponent","showMessage","setShowMessage","useState","Board","Component","renderSquare","i","squares","render","boardSquares","row","boardRow","col","push","Game","constructor","winner_line","isDraw","state","history","Array","fill","lastMove","update","stepNumber","xIsNext","isReverse","handleClick","console","log","slice","current","length","Math","floor","calculateWinner","setState","concat","jumpTo","step","winner","moves","map","move","desc","toString","status","indices","elements","document","getElementById","element","classList","add","remove","winnerElements","getElementsByClassName","reverse","height","fontWeight","root","createRoot","lines","a","b","c"],"sources":["/Users/danielheibach/Daniel/React/Tictactoe/my-app/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\n\n  function Square(props) {\n    return (\n      <button /*style ={{backgroundColor: \"red\"}}*/ id={props.id} className={\"square\"} onClick={props.onClick}>\n        {props.value}\n      </button>\n    );\n\n    function HoverableComponent() {\n      const [showMessage, setShowMessage] = useState(false);\n    \n      return (\n        <>\n          <div\n            className=\"hoverableDiv\"\n            onMouseEnter={() => {\n              setShowMessage(true);\n            }}\n            onMouseLeave={() => {\n              setShowMessage(false);\n            }}\n          >\n            Hover me!\n          </div>\n          {showMessage && <h1>Hello, World!</h1>}\n        </>\n      );\n\n  }\n\n  \n\n  class Board extends React.Component {\n    renderSquare(i) {\n      return (\n        <Square \n          value={this.props.squares[i]}\n          onClick={() => this.props.onClick(i)}\n          id={\"square_\" + i}\n        />\n      );\n    }\n  \n  /*  render() {\n      return (\n        <>\n        <div>\n          <div className=\"board-row\">\n            {this.renderSquare(0)}\n            {this.renderSquare(1)}\n            {this.renderSquare(2)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(3)}\n            {this.renderSquare(4)}\n            {this.renderSquare(5)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(6)}\n            {this.renderSquare(7)}\n            {this.renderSquare(8)}\n          </div>\n        </div>\n        </>\n      );\n    }\n*/\n      render() {  \n          let boardSquares = [];\n          for(let row = 0; row < 3; row++){\n            let boardRow = [];\n            for(let col = 0; col < 3; col++){\n              boardRow.push(<span key={(row * 3) + col}>{this.renderSquare((row * 3) + col)}</span>);\n            }\n            boardSquares.push(<div className=\"board-row\" key={row}>{boardRow}</div>);\n          }\n\n          return (\n            <div>\n              {boardSquares}\n            </div>\n          );\n      }\n\n  }\n  \n  class Game extends React.Component {\n    constructor(props) {\n      super(props);\n      this.winner_line = null;\n      this.isDraw = false;\n      this.state = {\n        history: [\n          {\n          squares: Array(9).fill(null),\n          lastMove: null,\n          }\n        ],\n        update: false,\n        stepNumber: 0,\n        xIsNext: true,\n        isReverse: false,\n      };\n    }\n    \n\n    handleClick(i) {\n      console.log(\"was pressed\");\n      const history = this.state.history.slice(0, this.state.stepNumber + 1);\n      const current = history[history.length - 1];\n      const squares = current.squares.slice();\n      const lastMove = [i%3, Math.floor(i/3)];\n      \n\n\n      if (calculateWinner(squares)  || squares[i] || this.isDraw) {\n        return;\n      }\n\n      console.log(history.length);\n\n      if (history.length >= 9 && current !== 9) this.isDraw = true;\n\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\n      this.setState({\n        history: history.concat([\n          {\n          squares: squares,\n          lastMove: lastMove,\n          }\n        ]),\n          stepNumber: history.length,\n          xIsNext: !this.state.xIsNext,\n      });\n    }\n\n    jumpTo(step) {\n      if (step !== 9) this.isDraw = false;\n      else if (this.winner_line === null) this.isDraw = true;\n      this.setState({\n        stepNumber: step,\n        xIsNext: (step % 2) === 0 \n      });\n    }\n\n    render() {\n      let history = this.state.history;\n      const current = history[this.state.stepNumber];\n      const winner = calculateWinner(current.squares);\n\n      let moves = history.map((step, move) => {\n        const desc = move ?\n          'Go to move #' + move + ' at position (' + history[move].lastMove.toString() +')'  :\n          'Go to game start';\n\n\n        if (this.state.stepNumber === move) {\n          return (\n          <li key={move}>\n            <button \n            className='bold' \n              onClick={() => this.jumpTo(move)}>\n              {desc}\n            </button>\n            </li>)\n          \n          } else {  \n          return ( \n            <li key={move}>\n              <button \n              className='status' \n                onClick={() => this.jumpTo(move)}>\n                {desc}\n              </button>    \n            </li>\n          );\n        }}); \n\n    let status;\n      if (winner) {\n        status = 'Winner: ' + winner[0];\n          \n        const indices = winner[1];\n\n        const elements = []\n\n        elements.push(document.getElementById(\"square_\" + indices[0]));\n        elements.push(document.getElementById(\"square_\" + indices[1]));\n        elements.push(document.getElementById(\"square_\" + indices[2]));\n\n        for (const element of elements) {\n          element.classList.add(\"winner\");\n        }\n\n        this.winner_line = winner[1];\n      \n      } else if (this.isDraw) {\n        status = \"This is a draw\"\n      } else {\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        if (this.winner_line !== null){\n          const elements = []\n\n          elements.push(document.getElementById(\"square_\" + this.winner_line[0]));\n          elements.push(document.getElementById(\"square_\" + this.winner_line[1]));\n          elements.push(document.getElementById(\"square_\" + this.winner_line[2]));\n\n          for (const element of elements) {\n            element.classList.remove(\"winner\");\n          }\n          this.winner_line = null;\n        }\n        const winnerElements = document.getElementsByClassName(\"winner\")? document.getElementsByClassName(\"winner\") : null;\n        if (winnerElements !== null) {\n          for (const element in winnerElements) {\n            element.classList?.remove(\"winner\");\n          }\n        }\n      }\n\n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board \n              squares={current.squares}\n              onClick={i => this.handleClick(i)}\n            />\n          </div>\n          <div className=\"game-info\">\n            <div>{status}</div>\n            <ol>{this.state.isReverse ? moves.reverse() : moves}</ol>\n          </div>\n          <button id='sortButton' style = {{height: 22, fontWeight: 'bold'}} hidden={!(moves.length > 1)} onClick={() => {\n            this.setState({\n              isReverse: !this.state.isReverse,\n            })\n            }}>⇅ sort me ⇅</button>\n        </div>\n      );\n    }\n  }\n  // ========================================\n  \n  const root = ReactDOM.createRoot(document.getElementById(\"root\"));\n  root.render(<Game />);\n\n  function calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return [squares[a], lines[i]];\n    }\n  }\n  return null;\n\n}\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}